<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="
        http://www.springframework.org/schema/beans    
        http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-4.0.xsd
        http://www.springframework.org/schema/tx 
    	http://www.springframework.org/schema/tx/spring-tx.xsd
    	http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd">

	<!-- This session tells Spring context where to look for bean classes with 
		appropriate annotations -->
	<context:component-scan base-package="com.nash.spring"></context:component-scan>
	<context:component-scan base-package="com.nash.service"></context:component-scan>
	<context:component-scan base-package="com.nash.dao"></context:component-scan>
	<context:component-scan base-package="com.nash.controller"></context:component-scan>
	<context:component-scan base-package="com.nash"></context:component-scan>

	<bean
		class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping"
		id="handlerMapping">
		<property name="alwaysUseFullPath" value="true">
		</property>
	</bean>
	<mvc:resources location="/deftApp/" mapping="/deftApp/**" />
	<mvc:resources location="/js/" mapping="/js/**" />

	<mvc:annotation-driven />

	<!-- declare using spring transaction annotation -->
	<tx:annotation-driven />
	<context:annotation-config />
	<!-- Configure JDBC Connection -->
	<bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="org.postgresql.Driver" />
		<property name="url" value="jdbc:postgresql://localhost:5432/datamining" />
		<property name="username" value="zhouyf" />
		<property name="password" value="test123" />
	</bean>

	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix">
			<value>/pages/</value>
		</property>
		<property name="suffix">
			<value>.jsp</value>
		</property>
	</bean>

	<!-- Configure Hibernate 4 Session Facotry -->
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<qualifier value="firstSessionFactory"></qualifier>
		<property name="dataSource">
			<ref bean="dataSource" />
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.connection.autocommit">true</prop>
				<prop key="hibernate.dialect">org.hibernate.dialect.PostgreSQLDialect</prop>
				<prop key="hibernate.show_sql">true</prop>

			</props>
		</property>
		<property name="annotatedClasses">
			<list>
				<value>com.nash.model.Address</value>
				<value>com.nash.model.Meter</value>
			    <value>com.nash.model.MeterAddress</value>
				<value>com.nash.model.MeterAddressId</value>
				
				<!-- <value>com.nash.model.Ticket</value>
				<value>com.nash.model.Location</value>
				<value>com.nash.model.Route</value>
				<value>com.nash.model.Schedule</value> -->
			</list>
		</property>
		<property name="mappingLocations">
			<list>
			<!-- 	<value> classpath:mappingDefinition/Location.hbm.xml</value>
				<value> classpath:mappingDefinition/Route.hbm.xml</value>
				<value> classpath:mappingDefinition/Person.hbm.xml</value> -->
			</list>
		</property>
	</bean>

	<!-- abstract bean -->
	<bean id="abstractDaoTarget" class="com.nash.dao.GenericDaoHibernateImpl"
		abstract="true">
		<property name="sessionFactory">
			<ref bean="sessionFactory" />
		</property>
	</bean>

	<bean id="abstractDao" class="org.springframework.aop.framework.ProxyFactoryBean"
		abstract="true">
		<property name="interceptorNames">
			<list>
				<value>finderIntroductionAdvisor</value>
			</list>
		</property>
	</bean>
	<!--end of abstract bean -->

	<!-- advisor definition -->
	<bean id="finderIntroductionAdvisor" class="com.nash.advisor.FinderIntroductionAdvisor" />

	<!-- end of advisor -->

	<!-- POJO definition -->
	<bean id="addressDao" parent="abstractDao">
		<property name="proxyInterfaces">
			<value>com.nash.dao.AddressDao</value>
		</property>
		<property name="target">
			<bean parent="abstractDaoTarget">
				<constructor-arg>
					<value>com.nash.model.Address</value>
				</constructor-arg>
			</bean>
		</property>
	</bean>
	
	
	<bean id="meterDao" parent="abstractDao">
		<property name="proxyInterfaces">
			<value>com.nash.dao.MeterDao</value>
		</property>
		<property name="target">
			<bean parent="abstractDaoTarget">
				<constructor-arg>
					<value>com.nash.model.Meter</value>
				</constructor-arg>
			</bean>
		</property>
	</bean>

	
	<!-- end POJO definition -->

	<bean id="transactionManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager"
		p:sessionFactory-ref="sessionFactory">
	</bean>
	<!-- test bean definition -->
	<bean id="foo" class="com.nash.Foo">
		<property name="test" value="haha"></property>
	</bean>
	<bean id="taskExecutor"
		class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
		<property name="corePoolSize" value="5" />
		<property name="maxPoolSize" value="10" />
		<property name="WaitForTasksToCompleteOnShutdown" value="true" />
	</bean>
	<!-- end test bean definition -->
</beans>